AWSTemplateFormatVersion: '2010-09-09'
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            -
              Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
      Path: /
      Policies:
          -
            PolicyName: CloudwatchLogs
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                -
                  Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                  Resource:
                    - !Sub "arn:aws:logs:${AWS::Region}:${AWS::Account}:*"
                -
                  Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - !Sub "arn:aws:logs:${AWS::Region}:${AWS::Account}:log-group:/aws/lambda/f-upper-javascript-varchar"
  LambdaUDFFunction:
     Type: "AWS::Lambda::Function"
     Properties:
       FunctionName: f-upper-javascript-varchar
       Role: !Ref LambdaRole
       Timeout: 300
       Code:
         ZipFile: |
           exports.handler = async (event) => {
               var res = event.arguments.map((x) => x[0].toUpperCase());
               var ret_json = JSON.stringify({"results": res});
               return ret_json
           };
       Handler: index.handler
       Runtime: nodejs14.x
